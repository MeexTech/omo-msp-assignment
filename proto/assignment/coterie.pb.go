// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/assignment/coterie.proto

package assignment

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CoterieInfo struct {
	Uid                  string          `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Id                   uint64          `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Created              int64           `protobuf:"varint,3,opt,name=created,proto3" json:"created,omitempty"`
	Updated              int64           `protobuf:"varint,4,opt,name=updated,proto3" json:"updated,omitempty"`
	Creator              string          `protobuf:"bytes,5,opt,name=creator,proto3" json:"creator,omitempty"`
	Operator             string          `protobuf:"bytes,6,opt,name=operator,proto3" json:"operator,omitempty"`
	Name                 string          `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	Remark               string          `protobuf:"bytes,8,opt,name=remark,proto3" json:"remark,omitempty"`
	Cover                string          `protobuf:"bytes,9,opt,name=cover,proto3" json:"cover,omitempty"`
	Status               uint32          `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`
	Passwords            string          `protobuf:"bytes,11,opt,name=passwords,proto3" json:"passwords,omitempty"`
	Master               string          `protobuf:"bytes,12,opt,name=master,proto3" json:"master,omitempty"`
	Centre               string          `protobuf:"bytes,13,opt,name=centre,proto3" json:"centre,omitempty"`
	Type                 uint32          `protobuf:"varint,14,opt,name=type,proto3" json:"type,omitempty"`
	Meta                 uint32          `protobuf:"varint,15,opt,name=meta,proto3" json:"meta,omitempty"`
	Assistants           []string        `protobuf:"bytes,18,rep,name=assistants,proto3" json:"assistants,omitempty"`
	Tags                 []string        `protobuf:"bytes,19,rep,name=tags,proto3" json:"tags,omitempty"`
	Members              []*IdentifyInfo `protobuf:"bytes,20,rep,name=members,proto3" json:"members,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CoterieInfo) Reset()         { *m = CoterieInfo{} }
func (m *CoterieInfo) String() string { return proto.CompactTextString(m) }
func (*CoterieInfo) ProtoMessage()    {}
func (*CoterieInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f49fe3a7908038e3, []int{0}
}

func (m *CoterieInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoterieInfo.Unmarshal(m, b)
}
func (m *CoterieInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoterieInfo.Marshal(b, m, deterministic)
}
func (m *CoterieInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoterieInfo.Merge(m, src)
}
func (m *CoterieInfo) XXX_Size() int {
	return xxx_messageInfo_CoterieInfo.Size(m)
}
func (m *CoterieInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CoterieInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CoterieInfo proto.InternalMessageInfo

func (m *CoterieInfo) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *CoterieInfo) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CoterieInfo) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *CoterieInfo) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *CoterieInfo) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *CoterieInfo) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

func (m *CoterieInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CoterieInfo) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *CoterieInfo) GetCover() string {
	if m != nil {
		return m.Cover
	}
	return ""
}

func (m *CoterieInfo) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *CoterieInfo) GetPasswords() string {
	if m != nil {
		return m.Passwords
	}
	return ""
}

func (m *CoterieInfo) GetMaster() string {
	if m != nil {
		return m.Master
	}
	return ""
}

func (m *CoterieInfo) GetCentre() string {
	if m != nil {
		return m.Centre
	}
	return ""
}

func (m *CoterieInfo) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *CoterieInfo) GetMeta() uint32 {
	if m != nil {
		return m.Meta
	}
	return 0
}

func (m *CoterieInfo) GetAssistants() []string {
	if m != nil {
		return m.Assistants
	}
	return nil
}

func (m *CoterieInfo) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *CoterieInfo) GetMembers() []*IdentifyInfo {
	if m != nil {
		return m.Members
	}
	return nil
}

type ReqCoterieAdd struct {
	Sn                   string          `protobuf:"bytes,1,opt,name=sn,proto3" json:"sn,omitempty"`
	Name                 string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Centre               string          `protobuf:"bytes,3,opt,name=centre,proto3" json:"centre,omitempty"`
	Type                 uint32          `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Remark               string          `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark,omitempty"`
	Operator             string          `protobuf:"bytes,6,opt,name=operator,proto3" json:"operator,omitempty"`
	Passwords            string          `protobuf:"bytes,7,opt,name=passwords,proto3" json:"passwords,omitempty"`
	Cover                string          `protobuf:"bytes,8,opt,name=cover,proto3" json:"cover,omitempty"`
	Master               string          `protobuf:"bytes,9,opt,name=master,proto3" json:"master,omitempty"`
	Members              []*IdentifyInfo `protobuf:"bytes,10,rep,name=members,proto3" json:"members,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ReqCoterieAdd) Reset()         { *m = ReqCoterieAdd{} }
func (m *ReqCoterieAdd) String() string { return proto.CompactTextString(m) }
func (*ReqCoterieAdd) ProtoMessage()    {}
func (*ReqCoterieAdd) Descriptor() ([]byte, []int) {
	return fileDescriptor_f49fe3a7908038e3, []int{1}
}

func (m *ReqCoterieAdd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqCoterieAdd.Unmarshal(m, b)
}
func (m *ReqCoterieAdd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqCoterieAdd.Marshal(b, m, deterministic)
}
func (m *ReqCoterieAdd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqCoterieAdd.Merge(m, src)
}
func (m *ReqCoterieAdd) XXX_Size() int {
	return xxx_messageInfo_ReqCoterieAdd.Size(m)
}
func (m *ReqCoterieAdd) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqCoterieAdd.DiscardUnknown(m)
}

var xxx_messageInfo_ReqCoterieAdd proto.InternalMessageInfo

func (m *ReqCoterieAdd) GetSn() string {
	if m != nil {
		return m.Sn
	}
	return ""
}

func (m *ReqCoterieAdd) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReqCoterieAdd) GetCentre() string {
	if m != nil {
		return m.Centre
	}
	return ""
}

func (m *ReqCoterieAdd) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ReqCoterieAdd) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *ReqCoterieAdd) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

func (m *ReqCoterieAdd) GetPasswords() string {
	if m != nil {
		return m.Passwords
	}
	return ""
}

func (m *ReqCoterieAdd) GetCover() string {
	if m != nil {
		return m.Cover
	}
	return ""
}

func (m *ReqCoterieAdd) GetMaster() string {
	if m != nil {
		return m.Master
	}
	return ""
}

func (m *ReqCoterieAdd) GetMembers() []*IdentifyInfo {
	if m != nil {
		return m.Members
	}
	return nil
}

type ReqCoterieUpdate struct {
	Uid                  string   `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Remark               string   `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"`
	Passwords            string   `protobuf:"bytes,4,opt,name=passwords,proto3" json:"passwords,omitempty"`
	Operator             string   `protobuf:"bytes,5,opt,name=operator,proto3" json:"operator,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqCoterieUpdate) Reset()         { *m = ReqCoterieUpdate{} }
func (m *ReqCoterieUpdate) String() string { return proto.CompactTextString(m) }
func (*ReqCoterieUpdate) ProtoMessage()    {}
func (*ReqCoterieUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_f49fe3a7908038e3, []int{2}
}

func (m *ReqCoterieUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqCoterieUpdate.Unmarshal(m, b)
}
func (m *ReqCoterieUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqCoterieUpdate.Marshal(b, m, deterministic)
}
func (m *ReqCoterieUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqCoterieUpdate.Merge(m, src)
}
func (m *ReqCoterieUpdate) XXX_Size() int {
	return xxx_messageInfo_ReqCoterieUpdate.Size(m)
}
func (m *ReqCoterieUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqCoterieUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_ReqCoterieUpdate proto.InternalMessageInfo

func (m *ReqCoterieUpdate) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *ReqCoterieUpdate) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReqCoterieUpdate) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *ReqCoterieUpdate) GetPasswords() string {
	if m != nil {
		return m.Passwords
	}
	return ""
}

func (m *ReqCoterieUpdate) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

type ReplyCoterieInfo struct {
	Status               *ReplyStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Info                 *CoterieInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ReplyCoterieInfo) Reset()         { *m = ReplyCoterieInfo{} }
func (m *ReplyCoterieInfo) String() string { return proto.CompactTextString(m) }
func (*ReplyCoterieInfo) ProtoMessage()    {}
func (*ReplyCoterieInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f49fe3a7908038e3, []int{3}
}

func (m *ReplyCoterieInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyCoterieInfo.Unmarshal(m, b)
}
func (m *ReplyCoterieInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyCoterieInfo.Marshal(b, m, deterministic)
}
func (m *ReplyCoterieInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyCoterieInfo.Merge(m, src)
}
func (m *ReplyCoterieInfo) XXX_Size() int {
	return xxx_messageInfo_ReplyCoterieInfo.Size(m)
}
func (m *ReplyCoterieInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyCoterieInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyCoterieInfo proto.InternalMessageInfo

func (m *ReplyCoterieInfo) GetStatus() *ReplyStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ReplyCoterieInfo) GetInfo() *CoterieInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type ReplyCoterieList struct {
	Status               *ReplyStatus   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	List                 []*CoterieInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ReplyCoterieList) Reset()         { *m = ReplyCoterieList{} }
func (m *ReplyCoterieList) String() string { return proto.CompactTextString(m) }
func (*ReplyCoterieList) ProtoMessage()    {}
func (*ReplyCoterieList) Descriptor() ([]byte, []int) {
	return fileDescriptor_f49fe3a7908038e3, []int{4}
}

func (m *ReplyCoterieList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyCoterieList.Unmarshal(m, b)
}
func (m *ReplyCoterieList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyCoterieList.Marshal(b, m, deterministic)
}
func (m *ReplyCoterieList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyCoterieList.Merge(m, src)
}
func (m *ReplyCoterieList) XXX_Size() int {
	return xxx_messageInfo_ReplyCoterieList.Size(m)
}
func (m *ReplyCoterieList) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyCoterieList.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyCoterieList proto.InternalMessageInfo

func (m *ReplyCoterieList) GetStatus() *ReplyStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ReplyCoterieList) GetList() []*CoterieInfo {
	if m != nil {
		return m.List
	}
	return nil
}

type ReplyCoterieMembers struct {
	Status               *ReplyStatus    `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	List                 []*IdentifyInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ReplyCoterieMembers) Reset()         { *m = ReplyCoterieMembers{} }
func (m *ReplyCoterieMembers) String() string { return proto.CompactTextString(m) }
func (*ReplyCoterieMembers) ProtoMessage()    {}
func (*ReplyCoterieMembers) Descriptor() ([]byte, []int) {
	return fileDescriptor_f49fe3a7908038e3, []int{5}
}

func (m *ReplyCoterieMembers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyCoterieMembers.Unmarshal(m, b)
}
func (m *ReplyCoterieMembers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyCoterieMembers.Marshal(b, m, deterministic)
}
func (m *ReplyCoterieMembers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyCoterieMembers.Merge(m, src)
}
func (m *ReplyCoterieMembers) XXX_Size() int {
	return xxx_messageInfo_ReplyCoterieMembers.Size(m)
}
func (m *ReplyCoterieMembers) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyCoterieMembers.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyCoterieMembers proto.InternalMessageInfo

func (m *ReplyCoterieMembers) GetStatus() *ReplyStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ReplyCoterieMembers) GetList() []*IdentifyInfo {
	if m != nil {
		return m.List
	}
	return nil
}

func init() {
	proto.RegisterType((*CoterieInfo)(nil), "omo.msp.assignment.CoterieInfo")
	proto.RegisterType((*ReqCoterieAdd)(nil), "omo.msp.assignment.ReqCoterieAdd")
	proto.RegisterType((*ReqCoterieUpdate)(nil), "omo.msp.assignment.ReqCoterieUpdate")
	proto.RegisterType((*ReplyCoterieInfo)(nil), "omo.msp.assignment.ReplyCoterieInfo")
	proto.RegisterType((*ReplyCoterieList)(nil), "omo.msp.assignment.ReplyCoterieList")
	proto.RegisterType((*ReplyCoterieMembers)(nil), "omo.msp.assignment.ReplyCoterieMembers")
}

func init() {
	proto.RegisterFile("proto/assignment/coterie.proto", fileDescriptor_f49fe3a7908038e3)
}

var fileDescriptor_f49fe3a7908038e3 = []byte{
	// 735 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0xdd, 0x4e, 0xdb, 0x4a,
	0x10, 0x26, 0x76, 0x7e, 0xc8, 0x24, 0x04, 0xb4, 0xa0, 0xa3, 0x55, 0x74, 0xe0, 0x18, 0x0b, 0xe9,
	0xe4, 0x2a, 0x48, 0x70, 0xa4, 0x23, 0xf5, 0x0e, 0x2a, 0x81, 0x90, 0x8a, 0x2a, 0xec, 0x56, 0x95,
	0x50, 0x6f, 0x16, 0x7b, 0xa0, 0x56, 0xe3, 0x1f, 0x76, 0x37, 0x54, 0xb9, 0xeb, 0x45, 0xaf, 0xfa,
	0x0a, 0x7d, 0xa4, 0x3e, 0x41, 0xdf, 0xa6, 0xda, 0x5d, 0x93, 0xd8, 0x21, 0x7f, 0x6d, 0xb9, 0xdb,
	0x99, 0x9d, 0xf9, 0xfc, 0xcd, 0xf7, 0xcd, 0x46, 0x81, 0xbd, 0x8c, 0xa7, 0x32, 0x3d, 0x64, 0x42,
	0x44, 0x77, 0x49, 0x8c, 0x89, 0x3c, 0x0c, 0x52, 0x89, 0x3c, 0xc2, 0xbe, 0xbe, 0x20, 0x24, 0x8d,
	0xd3, 0x7e, 0x2c, 0xb2, 0xfe, 0xa4, 0xa2, 0xbb, 0x3b, 0xa3, 0x27, 0x8e, 0xd3, 0xc4, 0xb4, 0xb8,
	0x3f, 0x6c, 0x68, 0xbd, 0x34, 0x20, 0x17, 0xc9, 0x6d, 0x4a, 0xb6, 0xc0, 0x1e, 0x46, 0x21, 0xad,
	0x38, 0x95, 0x5e, 0xd3, 0x53, 0x47, 0xd2, 0x01, 0x2b, 0x0a, 0xa9, 0xe5, 0x54, 0x7a, 0x55, 0xcf,
	0x8a, 0x42, 0x42, 0xa1, 0x11, 0x70, 0x64, 0x12, 0x43, 0x6a, 0x3b, 0x95, 0x9e, 0xed, 0x3d, 0x86,
	0xea, 0x66, 0x98, 0x85, 0xfa, 0xa6, 0x6a, 0x6e, 0xf2, 0x70, 0xdc, 0x93, 0x72, 0x5a, 0xd3, 0xc8,
	0x8f, 0x21, 0xe9, 0xc2, 0x7a, 0x9a, 0x21, 0xd7, 0x57, 0x75, 0x7d, 0x35, 0x8e, 0x09, 0x81, 0x6a,
	0xc2, 0x62, 0xa4, 0x0d, 0x9d, 0xd7, 0x67, 0xf2, 0x17, 0xd4, 0x39, 0xc6, 0x8c, 0x7f, 0xa4, 0xeb,
	0x3a, 0x9b, 0x47, 0x64, 0x07, 0x6a, 0x41, 0xfa, 0x80, 0x9c, 0x36, 0x75, 0xda, 0x04, 0xaa, 0x5a,
	0x48, 0x26, 0x87, 0x82, 0x82, 0x53, 0xe9, 0x6d, 0x78, 0x79, 0x44, 0xfe, 0x86, 0x66, 0xc6, 0x84,
	0xf8, 0x94, 0xf2, 0x50, 0xd0, 0x96, 0xee, 0x98, 0x24, 0x54, 0x57, 0xcc, 0x84, 0x44, 0x4e, 0xdb,
	0xe6, 0x1b, 0x26, 0x52, 0xf9, 0x00, 0x13, 0xc9, 0x91, 0x6e, 0x98, 0xbc, 0x89, 0x14, 0x4f, 0x39,
	0xca, 0x90, 0x76, 0xf4, 0x37, 0xf4, 0x59, 0xe5, 0x62, 0x94, 0x8c, 0x6e, 0x9a, 0x9c, 0x3a, 0x93,
	0x3d, 0x00, 0x65, 0x83, 0x90, 0x2c, 0x91, 0x82, 0x12, 0xc7, 0xee, 0x35, 0xbd, 0x42, 0x46, 0xe3,
	0xb0, 0x3b, 0x41, 0xb7, 0xf5, 0x8d, 0x3e, 0x93, 0x17, 0xd0, 0x88, 0x31, 0xbe, 0x41, 0x2e, 0xe8,
	0x8e, 0x63, 0xf7, 0x5a, 0x47, 0x4e, 0xff, 0xa9, 0xc9, 0xfd, 0x8b, 0x10, 0x13, 0x19, 0xdd, 0x8e,
	0x94, 0x85, 0xde, 0x63, 0x83, 0xfb, 0xcd, 0x82, 0x0d, 0x0f, 0xef, 0x73, 0x7b, 0x4f, 0x42, 0xed,
	0xa5, 0x48, 0x72, 0x73, 0x2d, 0x91, 0x8c, 0x15, 0xb6, 0xca, 0x0a, 0xe7, 0x53, 0xda, 0x33, 0xa7,
	0xac, 0x16, 0xa6, 0x9c, 0xb8, 0x51, 0x2b, 0xb9, 0xb1, 0xc8, 0xd5, 0x92, 0xf6, 0x8d, 0x69, 0xed,
	0xc7, 0x3e, 0xae, 0x4f, 0xf9, 0x98, 0x3b, 0xd2, 0x2c, 0x39, 0x52, 0x50, 0x07, 0x7e, 0x55, 0x9d,
	0xaf, 0x15, 0xd8, 0x9a, 0xa8, 0xf3, 0x56, 0x6f, 0xea, 0x8c, 0xf5, 0x9f, 0x23, 0x51, 0x3e, 0xb6,
	0x5d, 0x1a, 0xbb, 0x34, 0x5a, 0x75, 0x7a, 0xb4, 0xa2, 0x28, 0xb5, 0xb2, 0x28, 0xee, 0x67, 0x4d,
	0x26, 0x1b, 0x8c, 0x8a, 0x6f, 0xf1, 0xff, 0xf1, 0xf6, 0x2a, 0x3e, 0xad, 0xa3, 0x7f, 0x66, 0x0d,
	0xa7, 0xbb, 0x7c, 0x5d, 0x36, 0x5e, 0xef, 0x63, 0xa8, 0x46, 0xc9, 0x6d, 0xaa, 0x39, 0xcf, 0x69,
	0x2b, 0x7c, 0xc7, 0xd3, 0xc5, 0x4f, 0x28, 0xbc, 0x8a, 0x84, 0xfc, 0x23, 0x0a, 0x83, 0x48, 0x48,
	0x6a, 0x69, 0x5b, 0x96, 0x53, 0x50, 0xc5, 0xee, 0x97, 0x0a, 0x6c, 0x17, 0x29, 0x5c, 0x1a, 0xab,
	0x7e, 0x9f, 0xc5, 0x7f, 0x25, 0x16, 0xcb, 0x97, 0x43, 0x57, 0x1f, 0x7d, 0x6f, 0x40, 0x27, 0x67,
	0xe0, 0x23, 0x7f, 0x88, 0x02, 0x24, 0x3e, 0xd4, 0x4f, 0xc2, 0xf0, 0x75, 0x82, 0x64, 0x7f, 0xf6,
	0xb7, 0x0b, 0xaf, 0xac, 0x7b, 0x30, 0x97, 0x5e, 0x61, 0x64, 0x77, 0x8d, 0xf8, 0x00, 0x66, 0xed,
	0x4e, 0x99, 0x40, 0x72, 0xb0, 0x18, 0xd8, 0x54, 0x76, 0x77, 0xe7, 0x62, 0xe7, 0xa0, 0x97, 0xd0,
	0xf4, 0x30, 0x4e, 0x1f, 0x50, 0x91, 0x9d, 0x23, 0xd4, 0xfd, 0x10, 0x85, 0x54, 0xf5, 0xcb, 0xe1,
	0xae, 0xa0, 0x7e, 0x8e, 0x72, 0x25, 0xac, 0x55, 0xc7, 0xbe, 0x82, 0xba, 0x8f, 0x8c, 0x07, 0x1f,
	0x9e, 0x01, 0x52, 0x2d, 0xa9, 0xbb, 0x46, 0xde, 0xc3, 0xe6, 0x39, 0x4a, 0x15, 0x9c, 0x8e, 0xce,
	0xa2, 0x81, 0xfa, 0x69, 0xd8, 0x5f, 0x80, 0x6d, 0x4a, 0x56, 0x46, 0x7f, 0x07, 0xed, 0x73, 0x94,
	0x6a, 0xb5, 0x22, 0x21, 0xa3, 0x60, 0x15, 0x68, 0x77, 0xe1, 0x86, 0x6a, 0x18, 0x77, 0x8d, 0xbc,
	0x81, 0x4e, 0xbe, 0x00, 0xab, 0xb0, 0x5e, 0x75, 0x03, 0x7c, 0x68, 0x9b, 0x52, 0xf3, 0x18, 0x88,
	0xbb, 0x50, 0x65, 0x79, 0x36, 0x60, 0x77, 0xcb, 0x41, 0xaf, 0xa1, 0x7d, 0x92, 0x65, 0x98, 0x84,
	0xe6, 0x4d, 0x2e, 0xb7, 0xee, 0xdf, 0x65, 0xe2, 0xe6, 0x8f, 0x5b, 0xbb, 0xd7, 0xf1, 0x87, 0x37,
	0x92, 0xb3, 0x40, 0x3e, 0x3f, 0xfa, 0x29, 0xb9, 0xde, 0x9a, 0xfe, 0x0b, 0x74, 0x53, 0xd7, 0x99,
	0xe3, 0x9f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x0b, 0x43, 0xc1, 0x52, 0x51, 0x09, 0x00, 0x00,
}
